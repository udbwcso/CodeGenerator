import com.ecp.commons.serialization.GenericBean;
import com.ecp.commons.serialization.SerializableObject;
import com.ecp.commons.serialization.Variant;
import com.ecp.commons.annotation.VariantType;
import java.util.Date;


public class ${entity} extends GenericBean implements SerializableObject {

    @Override
    public void defineVariantSet() {
        this.entity = "${TABLE_NAME}";
    #foreach( $column in $columnList )
    map.put("$column.field", new Variant().setType(#if($column.javaType == 'int')VariantType.INTEGER)#elseif($column.javaType == 'String')VariantType.STRING).setLength($column.COLUMN_SIZE)#elseif($column.javaType == 'Date')VariantType.DATETIME)#elseif($column.javaType == 'Double')VariantType.DOUBLE)#end.setNullable(#if($column.isNullable == 'YES')true#else false#end));
    #end
    }

    @Override
    public void resetValues() {
    #foreach( $column in $columnList )
    this.set("$column.field",#if($column.javaType == 'int')0#elseif($column.javaType == 'String')""#elseif($column.javaType == 'Date')""#elseif($column.javaType == 'Double')""#end);
    #end
    }

#foreach( $column in $columnList )
    public $column.javaType get${column.firstUpperCaseField}(){
        return this.#if($column.javaType == 'int')getInt#elseif($column.javaType == 'String')getString#elseif($column.javaType == 'Date')getDate#elseif($column.javaType == 'Double')getDouble#end("$column.field");
    }

    public void set${column.firstUpperCaseField}($column.javaType $column.field){
        this.set("$column.field", $column.field);
    }

#end

}
